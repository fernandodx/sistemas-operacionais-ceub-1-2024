Um impasse ocorre quando dois ou mais processos (como "tarefas" ou "threads" no sistema) ficam "presos" esperando um pelo outro e não podem continuar. Suponha que o processo A esteja aguardando que o processo B libere um recurso, mas o processo B também esteja aguardando que o processo A libere outro recurso. Como resultado, ficam presos num ciclo onde ninguém consegue avançar. Este é um beco sem saída. 
Para que uma doença ocorra, 4 condições devem ser atendidas simultaneamente, a saber:
 Deixe uma: Isso significa que o imóvel só poderá ser utilizado para uma viagem por vez. Ou seja, se o processo A utiliza um recurso, o processo B não pode utilizá-lo ao mesmo tempo. 
 Sentar e esperar: Isso significa que um processo pode ter um recurso e solicitar outro recurso ao mesmo tempo. Portanto, o processo A pode reter um recurso e solicitar outro, e o mesmo pode acontecer com o processo B. 
 Não captura: Isso significa que uma viagem não pode forçar outra viagem a desperdiçar recursos; portanto, se o processador A usar um recurso, o sistema não poderá capturar esse recurso para o processo B. Grupo de espera: Este é o principal motivo do desligamento. Isso significa uma sequência de processos esperando uns pelos outros, por exemplo: o processo A está esperando por B, o processo B está esperando por C, o processo C está esperando a liberação de A. 
Os problemas resultantes são muito complexos, por exemplo, inatividade do aplicativo (nada acontece, o programa para), alto uso de recursos (porque o processo está "preso" ali, consome CPU, memória, etc.), até mesmo perda de dados (se o aplicativo não consegue completar sua tarefa e algumas informações estão corrompidas). 
Porém, os impasses são muito incômodos e devemos tentar evitá-los em nossas aplicações para não travar o sistema. Mas ainda estou aprendendo a fazer isso direito!